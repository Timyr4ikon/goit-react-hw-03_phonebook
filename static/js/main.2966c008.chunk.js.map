{"version":3,"sources":["components/ContactForm/ContactForm.module.js","components/ContactForm/ContactForm.js","components/ContactList/ContactItem.js","components/FilterContacts/FilterContacts.module.js","components/FilterContacts/FilterContacts.js","components/Phonebook/Phonebook.module.js","helpers/LocalStorage/LocalStorage.js","components/Phonebook/Phonebook.js","App.js","index.js"],"names":["ContForm","styled","form","InputLabel","label","Input","input","ButtonSubmit","button","formInitialState","name","number","ContactForm","contacts","addToContacts","useState","setForm","addInput","e","target","value","nameInput","uuidv4","numberInput","onSubmit","preventDefault","contact","id","some","alert","htmlFor","placeholder","onChange","type","disabled","defaultTypes","ContactItem","deleteContact","className","onClick","FilterSearch","FilterLabel","FilterContacts","filteredContacts","filter","setFilter","filtered","PhonebookTitle","h1","PBContainer","div","ContactList","ul","saveLS","key","localStorage","setItem","JSON","stringify","err","Error","getLS","items","getItem","parse","Phonebook","setContacts","filterContacts","setFilterContacts","useEffect","newContacts","contactsNew","length","filterValue","toLowerCase","includes","map","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2966c008.chunk.js","sourcesContent":["import styled from 'styled-components';\r\n\r\nexport const ContForm = styled.form`\r\n    text-align: center;\r\n`;\r\nexport const InputLabel = styled.label`\r\n`;\r\nexport const Input = styled.input`\r\n    display: block;\r\n    margin: 5px auto;\r\n    width: 80%;\r\n`;\r\nexport const ButtonSubmit = styled.button`\r\n padding: 10px;\r\n background-color: #33CC66;\r\n border: none;\r\n cursor: pointer;\r\n`;\r\n","import React, { useState } from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport {\r\n    ContForm,\r\n    Input,\r\n    InputLabel,\r\n    ButtonSubmit\r\n} from './ContactForm.module';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst formInitialState = {\r\n    name: '',\r\n    number: ''\r\n};\r\n\r\nconst ContactForm = ({contacts, addToContacts}) => {\r\n    const [form, setForm] = useState(formInitialState);\r\n\r\n    const addInput = (e) => {\r\n        const name = e.target.name;\r\n        const value = e.target.value;\r\n        setForm({...form, [name]: value})\r\n    };\r\n\r\n    const submitForm = (e) => {\r\n        e.preventDefault();\r\n        const {name, number} = form;\r\n        const contact = {\r\n            id: uuidv4(),\r\n            name,\r\n            number\r\n        };\r\n        if(contacts.some(contact => name === contact.name)){\r\n            alert(`${name} is already in contacts.`);\r\n            return\r\n        }\r\n        addToContacts(contact);\r\n        setForm(formInitialState);\r\n    };\r\n\r\n    const {name, number} = form;\r\n    const nameInput = uuidv4();\r\n    const numberInput = uuidv4();\r\n    return (\r\n        <ContForm onSubmit={submitForm}>\r\n            <InputLabel htmlFor={nameInput}>Name</InputLabel>\r\n            <Input name=\"name\" placeholder=\"Name and Surname\" value={name} onChange={addInput} id={nameInput}/>\r\n            <InputLabel htmlFor={numberInput}>Number</InputLabel>\r\n            <Input id={numberInput} name=\"number\" placeholder=\"Number\" value={number} onChange={addInput}/>\r\n            <ButtonSubmit type=\"submit\" disabled={!name || !number}>Add to contact</ButtonSubmit>\r\n        </ContForm>\r\n    );\r\n};\r\n\r\nContactForm.propTypes = {\r\n    contacts: PropTypes.arrayOf(PropTypes.shape({\r\n        id: PropTypes.string.isRequired,\r\n        name: PropTypes.string.isRequired,\r\n        number: PropTypes.string.isRequired,\r\n    }).isRequired),\r\n    addToContacts: PropTypes.any.isRequired\r\n}\r\n\r\nContactForm.defaultTypes = {\r\n    contacts: []\r\n}\r\n\r\nexport default ContactForm;","import React from 'react';\r\nimport './ContactItem.css';\r\nimport PropTypes from 'prop-types';\r\nimport 'material-icons';\r\n\r\nconst ContactItem = ({id, name, number, deleteContact}) => {\r\n    const delContact = () => {\r\n        deleteContact(id)\r\n    }\r\n    return (<>\r\n        <li className=\"contact__item\">\r\n            <span className=\"material-icons green\">call</span>\r\n            <p className=\"contact__info\">{`${name}: ${number}`}</p>\r\n            <button className=\"material-icons red button\" onClick={delContact}>delete_forever</button>\r\n        </li>\r\n        </>\r\n    );\r\n};\r\n\r\nContactItem.propTypes = {\r\n    id: PropTypes.string.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n    number: PropTypes.string.isRequired,\r\n    deleteContact: PropTypes.any.isRequired\r\n}\r\n\r\nexport default ContactItem;","import styled from 'styled-components';\r\n\r\nexport const FilterSearch = styled.input`\r\n    display: block;\r\n    width: 80%;\r\n    margin: 0 auto;\r\n`;\r\nexport const FilterLabel = styled.label`\r\npadding-left: 12%\r\n`;","import React, { useState } from 'react';\r\nimport {\r\n    FilterSearch,\r\n    FilterLabel\r\n} from './FilterContacts.module';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst FilterContacts = ({filteredContacts}) => {\r\n    const [filter, setFilter] = useState('');\r\n\r\n    const filtered = (e) => {\r\n        const name = e.target.value;\r\n        setFilter(name)\r\n    };\r\n\r\n    const filtration = (e) => {\r\n        filteredContacts(e.target.value);\r\n        filtered(e);\r\n    }\r\n\r\n    return (<>\r\n        <FilterLabel>Find contacts by name</FilterLabel>\r\n        <FilterSearch\r\n         type=\"text\" \r\n         placeholder=\"Name\" \r\n         value={filter} \r\n         onChange={filtration}/>\r\n        </>\r\n    );\r\n};\r\n\r\nFilterContacts.propTypes = {\r\n    filteredContacts: PropTypes.any.isRequired\r\n}\r\n\r\nexport default FilterContacts;","import styled from 'styled-components';\r\n\r\nexport const PhonebookTitle = styled.h1`\r\n    text-align: center;\r\n`;\r\nexport const PBContainer = styled.div`\r\n    width: 50%;\r\n    display: inline-block;\r\n    padding: 10px;\r\n    background-color: azure;\r\n    border-radius: 20px;\r\n`;\r\nexport const ContactList = styled.ul`\r\npadding: 0;\r\n`","export const saveLS = (key, value) => {\r\n    try {\r\n        localStorage.setItem(key, JSON.stringify(value));\r\n    } catch (err) {\r\n        throw new Error();\r\n    }\r\n  };\r\nexport const getLS = key => {\r\n    try {\r\n        const items = localStorage.getItem(key);\r\n        return items ? JSON.parse(items) : null;\r\n    } catch (err) {\r\n        throw new Error();\r\n    }\r\n  };\r\n","import React, { useState, useEffect } from 'react';\r\nimport ContactForm from '../ContactForm/ContactForm';\r\nimport ContactItem from '../ContactList/ContactItem';\r\nimport FilterContacts from '../FilterContacts/FilterContacts';\r\nimport {\r\n    PhonebookTitle,\r\n    PBContainer,\r\n    ContactList\r\n} from './Phonebook.module';\r\nimport { saveLS, getLS } from '../../helpers/LocalStorage/LocalStorage';\r\n\r\nconst isEmptyLocalStorage = () => {\r\n    if(!getLS(\"contacts\")){\r\n        saveLS(\"contacts\", []);\r\n        return []\r\n    };\r\n    return getLS(\"contacts\");\r\n};\r\n\r\nconst Phonebook = () => {\r\n    const [contacts, setContacts] = useState(isEmptyLocalStorage());\r\n    const [filterContacts, setFilterContacts] = useState([]);\r\n\r\n    const addToContacts = (contact) => {\r\n        const contactsNew = [...contacts, contact];\r\n        setContacts(contactsNew);\r\n    };\r\n\r\n    useEffect(() => {\r\n        saveLS(\"contacts\", contacts);\r\n        setFilterContacts(contacts);\r\n    }, [contacts]);\r\n\r\n    const filteredContacts = (filterValue) => {\r\n        const newContacts = contacts.filter(contact => (contact.name.toLowerCase()).includes(filterValue.toLowerCase()));\r\n        setFilterContacts(newContacts);\r\n    };\r\n\r\n    const deleteContact = (id) => {\r\n        const newContacts = contacts.filter((contact) => contact.id !== id);\r\n        setContacts(newContacts);\r\n    };\r\n\r\n    return (\r\n        <PBContainer>\r\n            <PhonebookTitle>Phonebook</PhonebookTitle>\r\n            <ContactForm contacts={contacts} addToContacts={addToContacts}/>\r\n\r\n            <PhonebookTitle>Contacts</PhonebookTitle>\r\n            {!contacts.length ?\r\n                <p>Contacts not found</p>\r\n                :\r\n                <>\r\n                <FilterContacts filteredContacts={filteredContacts}/>\r\n                <ContactList>\r\n                    {filterContacts.map((contact) => (\r\n                        <ContactItem key={contact.id} {...contact} deleteContact={deleteContact}/>\r\n                    ))}\r\n                </ContactList></>\r\n            }\r\n        </PBContainer>\r\n    );\r\n};\r\n\r\nexport default Phonebook;","import React from 'react';\r\nimport './App.css';\r\nimport Phonebook from './components/Phonebook/Phonebook';\r\n\r\nfunction App() {\r\n  return (\r\n    <Phonebook/>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}